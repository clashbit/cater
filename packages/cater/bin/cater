#!/usr/bin/env node

// Copyright Jon Williams 2017. See LICENSE file.
const path = require("path");

// Available commands
const BUILD_COMMANDS = ["build", "dev"];
const RUNTIME_COMMANDS = ["start"];
const PRODUCTION_COMMANDS = ["build", "start"];
const COMMANDS = BUILD_COMMANDS.concat(RUNTIME_COMMANDS);

// The command line format is `cater [command] <options>` this grabs the
// command.
const command = (process.argv[2] || "--help").toLowerCase().trim();

if (PRODUCTION_COMMANDS.includes(command)) {
  process.env.NODE_ENV = "production";
}

const catchFatal = function(err) {
  console.error(err);
  process.exit(-1);
};

const commandFunctionName = "run" + command.charAt(0).toUpperCase() + command.slice(1);

if (COMMANDS.includes(command)) {
  // The cater package does this too, but we want to be explicit here as
  // it's not necessarily determined by production versus dev.
  const isRuntime = RUNTIME_COMMANDS.includes(command);

  process.env.CATER_MODE = process.env.CATER_MODE || (isRuntime ? 'runtime' : 'build');

  const Cater = require('cater');
  const app = Cater();
  Cater.readyCommandLine();
  app[commandFunctionName]().catch(catchFatal);
} else {
  console.log(
    `Cater Framework.

    Usage:
        cater build
        cater dev
        cater --help

    Options:
        --help      Show this screen.
`
  );
}
