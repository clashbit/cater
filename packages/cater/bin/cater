#!/usr/bin/env node

// Copyright Jon Williams 2017-2018. See LICENSE file.

// Command-line interface for cater. For detail on how this works, run
//
//    cater --help

// Available commands, mapped to their mode
const commands = {
  build: 'build',
  deploy: 'deploy',
  dev: 'dev',
  start: 'runtime'
};
const commandList = Object.keys(commands);

const command = (process.argv[2] || '--help').toLowerCase().trim();

function catchFatal(err) {
  console.error(err); // eslint-disable-line no-console
  process.exit(-1);
}

const commandFunctionName = `run${command.charAt(0).toUpperCase() + command.slice(1)}`;

if (commandList.includes(command)) {
  // The cater package does this too, but we want to be explicit here as
  // it's not necessarily determined by production versus dev.
  const mode = process.env.CATER_MODE || commands[command];
  process.env.CATER_MODE = mode;

  const Cater = require('cater'); // eslint-disable-line global-require
  Cater.readyCommandLine();

  const app = Cater({ mode });
  app[commandFunctionName]().catch(catchFatal);
} else {
  // eslint-disable-next-line no-console
  console.log(
    `Cater Framework.

    Usage:
        cater build
        cater deploy
        cater dev
        cater start
        cater --help

    Options:
        --help      Show this screen.
`
  );
}
